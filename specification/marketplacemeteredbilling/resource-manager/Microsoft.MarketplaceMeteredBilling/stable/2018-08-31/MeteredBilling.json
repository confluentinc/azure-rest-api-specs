{
  "swagger": "2.0",
  "info": {
    "title": "MarketplaceMeteredBilling",
    "description": "REST API for MarketplaceMeteredBilling.",
    "version": "2018-08-31"
  },
  "host": "marketplaceapi.microsoft.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/usageEvent": {
      "post": {
        "description": "Report single usage event.",
        "operationId": "MarketplaceMeteredBilling_UsageEvent",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authorization."
          },
          {
            "name": "x-ms-requestid",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will be generated and provided in the response headers."
          },
          {
            "name": "x-ms-correlationid",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "A unique string value for operation on the client. This parameter correlates all events from client operation with events on the server side. If this value isn't provided, one will be generated and provided in the response headers."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsageEventRequest"
            },
            "description": "Parameters supplied to report a single usage event."
          }
        ],
        "x-ms-examples": {
          "UsageEvent": {
            "$ref": "./examples/UsageEvent.json"
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsageEventResponse"
            }
          },
          "400": {
            "description": "Bad request, missing or invalid data provided or expired",
            "schema": {
              "$ref": "#/definitions/BasicErrorProperties"
            }
          },
          "403": {
            "description": "Bad request, missing or invalid data provided or expired",
            "schema": {
              "$ref": "#/definitions/BasicErrorProperties"
            }
          },
          "409": {
            "description": "Conflict, when we receive the usage call for the usage resource ID, and effective usage, which already exists. The response will contain additionalInfo field that contains info about the accepted message.",
            "schema": {
              "$ref": "#/definitions/ErrorProperties"
            }
        }
        }
      }
    },
    "/batchUsageEvent": {
      "post": {
        "description": "Report batch usage events.",
        "operationId": "MarketplaceMeteredBilling_BatchUsageEvent",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authorization."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchUsageEventRequest"
            },
            "description": "Parameters supplied to report batch usage events."
          }
        ],
        "x-ms-examples": {
          "UsageEvent": {
            "$ref": "./examples/BatchUsageEvent.json"
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BatchUsageEventResponse"
            }
          },
          "400": {
            "description": "Bad request, missing or invalid data provided or expired.",
            "schema": {
              "$ref": "#/definitions/BasicErrorProperties"
            }

          },
          "403": {
            "description": "User is unauthorized to make this call.",
            "schema": {
              "$ref": "#/definitions/BasicErrorProperties"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    }
  },
  "definitions": {
    "UsageEventRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/UsageEventRequestProperties"
        }
      ],
      "description": "The UsageEvent endpoint allows you to emit usage events for a specific purchased entity"
    },
    "UsageEventRequestProperties": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Identifier of the resource against which usage is emitted."
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the dimension being reported."
        },
        "dimension": {
          "type": "string",
          "description": "Dimension identifier."
        },
        "effectiveStartTime": {
          "type": "string",
          "description": "Time in UTC when the usage event occurred."
        },
        "planId": {
          "type": "string",
          "description": "Plan associated with the purchased offer."
        }
      },
      "description": "UsageEvent definition"
    },



    "UsageEventResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ResultProperties"
        }
      ],
      "description": "The batchUsageEventResponse definition"
    },


    "BatchUsageEventRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/BatchUsageEventRequestProperties"
        }
      ],
      "description": "The batchUsageEvent endpoint allows you to emit usage events for a specific purchased entity"
    },
    "BatchUsageEventRequestProperties": {
      "properties": {
        "request": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageEventRequestProperties"
          }
        }
      },
      "description": "BatchUsageEvent definition"
    },
    "BatchUsageEventResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/BatchUsageEventResponseProperties"
        }
      ],
      "description": "The batchUsageEventResponse definition"
    },
    "BatchUsageEventResponseProperties": {
      "properties": {
        "result": {
          "type": "array",
          "items": {
                "$ref": "#/definitions/ResultProperties"
              },
          "description": "List of result objects"
        },
        "count": {
          "type": "integer",
          "description": "Count of result objects"
        }
      },
      "description": "BatchUsageEventResponseProperties definition"
    },
    "ResultProperties": {
      "properties": {
        "usageEventId": {
          "type": "string",
          "description": "Unique ID for the reported usage event."
        },
        "status": {
          "type": "string",
          "description": "Status of the result."
        },
        "messageTime": {
          "type": "string",
          "description": "Time when the message was sent."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID against which the metric was reported."
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the metric that was reported."
        },
        "dimension": {
          "type": "string",
          "description": "The metric id itself."
        },
        "effectiveStartTime": {
          "type": "string",
          "description": "The start time of the metric that was reported."
        },
        "planId": {
          "type": "string",
          "description": "Plan id of the subscriber."
        },
        "error": {
          "type": "object",
          "$ref": "#/definitions/ErrorProperties",
          "description": "Tenant that purchased the SaaS subscription."
        }
      },
      "description": "ResultProperties definition"
    },
    "ErrorProperties": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message."
        },
        "target": {
          "type": "string",
          "description": "API request target."
        },
        "details": {
          "type": "array",
          "items": {
                "$ref": "#/definitions/DetailsProperties"
              },
          "description": "More details about the error."
        },
        "code": {
          "type": "string",
          "description": "Error code enum."
        },
        "additionalInfo": {
          "type": "object",
          "$ref": "#/definitions/AdditionalInfoProperties",
          "description": "Additional information about the error."
        }
      },
      "description": "ErrorProperties definition"
    },
    "AdditionalInfoProperties": {
      "properties": {
        "acceptedMessage": {
          "type": "object",
          "$ref": "#/definitions/ResultProperties",
          "description": "Details about the accepted message."
        }
      },
      "description": "AdditionalInfoProperties definition"
    },
    "DetailsProperties": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Status of the result."
        },
        "target": {
          "type": "string",
          "description": "Time when the message was sent."
        },
        "code": {
          "type": "number",
          "description": "Quantity of the metric that was reported."
        }
      },
      "description": "DetailsProperties definition"
    },
    "BasicErrorProperties": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message."
        },
        "target": {
          "type": "string",
          "description": "API request target."
        },
        "details": {
          "type": "array",
          "items": {
                "$ref": "#/definitions/DetailsProperties"
              },
          "description": "More details about the error."
        },
        "code": {
          "type": "string",
          "description": "Error code enum."
        }
      },
      "description": "BasicErrorProperties definition"
    }
  }
}
